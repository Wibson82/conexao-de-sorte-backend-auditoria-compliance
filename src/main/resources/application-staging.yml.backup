# =============================================================================
# CONFIGURAÇÃO STAGING - AUDITORIA COMPLIANCE MICROSERVICE  
# =============================================================================
# Perfil otimizado para ambiente de staging com observabilidade enhanced
# Compatível com Spring Boot 3.5.5
# =============================================================================

spring:
  application:
    name: auditoria-staging
    
  # ===== R2DBC DATABASE CONFIGURATION =====
  r2dbc:
    url: ${STAGING_DATABASE_R2DBC_URL:r2dbc:mysql://localhost:3307/conexao_sorte_audit}
    username: ${STAGING_DATABASE_USERNAME:conexao_sorte}
    password: ${STAGING_DATABASE_PASSWORD:}
    pool:
      enabled: true
      initial-size: 5
      max-size: 20
      max-idle-time: 30m
      max-acquire-time: 30s
      validation-query: "SELECT 1"
      
  # ===== FLYWAY FOR MIGRATIONS =====
  flyway:
    enabled: true
    url: ${STAGING_DATABASE_FLYWAY_URL:jdbc:mysql://localhost:3307/conexao_sorte_audit}
    user: ${STAGING_DATABASE_USERNAME:conexao_sorte}
    password: ${STAGING_DATABASE_PASSWORD:}
    locations: classpath:db/migration
    baseline-on-migrate: true
    
  # ===== REDIS CONFIGURATION =====
  data:
    redis:
      host: ${STAGING_REDIS_HOST:localhost}
      port: ${STAGING_REDIS_PORT:6380}
      password: ${STAGING_REDIS_PASSWORD:}
      database: 3
      timeout: 2s
      lettuce:
        pool:
          enabled: true
          max-active: 8
          max-idle: 4
          min-idle: 1
          
  # ===== SECURITY CONFIGURATION =====
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${JWT_JWKS_URI:http://localhost:8081/.well-known/jwks.json}
          issuer-uri: ${JWT_ISSUER:https://staging.conexaodesorte.com}

# ===== SERVER CONFIGURATION =====
server:
  port: ${STAGING_SERVER_PORT:8085}
  shutdown: graceful
  servlet:
    context-path: /api/v1/auditoria

# ===== MANAGEMENT & OBSERVABILIDADE =====
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers,configprops
      base-path: /actuator
      cors:
        allowed-origins: "*"
        allowed-methods: GET,POST
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    redis:
      enabled: true
    r2dbc:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
        step: 30s
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.95,0.99

# ===== LOGGING ENHANCED FOR STAGING =====
logging:
  level:
    root: INFO
    br.tec.facilitaservicos.auditoria: DEBUG
    org.springframework.security: DEBUG
    org.springframework.r2dbc: INFO
    org.springframework.data.redis: DEBUG
    org.springframework.web.reactive: DEBUG
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} [STAGING] %m%n%wEx"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - [STAGING] %msg%n"
  file:
    name: /tmp/auditoria-staging.log
    max-size: 100MB
    max-history: 30

# ===== CORS PERMISSIVO PARA STAGING =====
cors:
  allowed-origins: 
    - "http://localhost:3000"
    - "https://staging.conexaodesorte.com"
  allowed-methods: "*"
  allowed-headers: "*"
  allow-credentials: true
  max-age: 3600

# ===== CONFIGURAÇÕES ESPECÍFICAS DO MICROSERVIÇO =====
app:
  microservice:
    name: auditoria-staging
    version: @project.version@
    
  auditoria:
    features:
      real-time-monitoring: true
      compliance-reports: true
      integrity-validation: true
      digital-signatures: true
      
    cache:
      event-cache-ttl: 300s  # 5 minutos
      report-cache-ttl: 900s  # 15 minutos
      
    api:
      rate-limit:
        enabled: true
        requests-per-minute: 500
        
    validation:
      hash-chain-validation: true
      signature-verification: true
      
    retention:
      event-retention-days: 2555  # 7 anos para compliance
      report-retention-days: 365   # 1 ano para relatórios

# ===== INTEGRAÇÃO COM OUTROS MICROSERVIÇOS =====
services:
  crypto:
    url: http://crypto-service:8086
    timeout: 10s
  user:
    url: http://user-service:8089
    timeout: 5s
    
# ===== DEBUG & DESENVOLVIMENTO =====
debug: true

# ===== SWAGGER/OPENAPI =====
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha