# ===== CONFIGURAÇÃO FINAL DE PRODUÇÃO - TODOS OS SEGREDOS INTEGRADOS =====
# Arquivo: application-prod-final.yml
# Perfil: prod (produção com Azure Key Vault)
# Versão: Spring Boot 3.5.5 + Java 24
# Data: $(date +'%Y-%m-%d %H:%M:%S')

spring:
  profiles:
    active: prod
    include:
      - azure
  
  # ===== IMPORTAÇÃO DE SEGREDOS DO AZURE KEY VAULT =====
  config:
    import:
      - "azure-keyvault://"
  
  # ===== CONFIGURAÇÃO AZURE KEY VAULT =====
  cloud:
    azure:
      keyvault:
        secret:
          enabled: true
          endpoint: ${AZURE_KEYVAULT_ENDPOINT}
          property-sources:
            - name: "conexao-de-sorte-secrets"
              endpoint: ${AZURE_KEYVAULT_ENDPOINT}
              refresh-interval: PT30M
              case-sensitive: false
      profile:
        tenant-id: ${AZURE_TENANT_ID}
      credential:
        client-id: ${AZURE_CLIENT_ID}
        managed-identity-enabled: false
  
  # ===== CONFIGURAÇÃO DE DATASOURCE (R2DBC + FLYWAY) =====
  r2dbc:
    url: ${conexao-de-sorte-database-r2dbc-url:r2dbc:mysql://localhost:3306/db_auditoria_compliance}
    username: ${conexao-de-sorte-database-username:root}
    password: ${conexao-de-sorte-database-password}
    pool:
      enabled: true
      initial-size: 5
      max-size: 20
      max-idle-time: PT30M
      validation-query: "SELECT 1"
  
  flyway:
    enabled: true
    url: ${conexao-de-sorte-database-jdbc-url:jdbc:mysql://localhost:3306/db_auditoria_compliance}
    user: ${conexao-de-sorte-database-username:root}
    password: ${conexao-de-sorte-database-password}
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    clean-disabled: true
    out-of-order: false
  
  # ===== CONFIGURAÇÃO REDIS =====
  data:
    redis:
      host: ${conexao-de-sorte-redis-host:localhost}
      port: ${conexao-de-sorte-redis-port:6379}
      password: ${conexao-de-sorte-redis-password:}
      database: ${conexao-de-sorte-redis-database:2}
      timeout: PT10S
      connect-timeout: PT10S
      lettuce:
        pool:
          enabled: true
          max-active: 20
          max-idle: 10
          min-idle: 2
          max-wait: PT10S
  
  # ===== CONFIGURAÇÃO OAUTH2 RESOURCE SERVER (JWT) =====
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${conexao-de-sorte-jwt-issuer}
          jwk-set-uri: ${conexao-de-sorte-jwt-jwks-uri}
          audiences:
            - "conexao-de-sorte-api"
            - "auditoria-compliance"
  
  # ===== CONFIGURAÇÃO KAFKA =====
  kafka:
    bootstrap-servers: ${conexao-de-sorte-kafka-bootstrap-servers:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 5
      buffer-memory: 33554432
    consumer:
      group-id: auditoria-compliance-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "br.com.conexaodesorte.auditoria.dto,br.com.conexaodesorte.shared.events"
  
  # ===== CONFIGURAÇÃO DO SERVIDOR =====
server:
  port: 8080
  ssl:
    enabled: ${conexao-de-sorte-ssl-enabled:false}
    key-store: ${conexao-de-sorte-ssl-keystore-path:}
    key-store-password: ${conexao-de-sorte-ssl-keystore-password:}
    key-store-type: PKCS12
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
  http2:
    enabled: true
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

# ===== CONFIGURAÇÃO CORS =====
cors:
  allowed-origins: ${conexao-de-sorte-cors-allowed-origins:http://localhost:3000,https://conexaodesorte.com.br}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
  allowed-headers: "*"
  allow-credentials: ${conexao-de-sorte-cors-allow-credentials:true}
  max-age: 3600

# ===== CONFIGURAÇÃO MANAGEMENT/ACTUATOR =====
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
      probes:
        enabled: true
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  health:
    redis:
      enabled: true
    db:
      enabled: true
    diskspace:
      enabled: true
    ping:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
        step: PT1M
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.9,0.95,0.99
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

# ===== CONFIGURAÇÃO JWT PERSONALIZADA =====
jwt:
  key-id: ${conexao-de-sorte-jwt-key-id}
  private-key: ${conexao-de-sorte-jwt-privateKey}
  public-key: ${conexao-de-sorte-jwt-publicKey}
  secret: ${conexao-de-sorte-jwt-secret}
  signing-key: ${conexao-de-sorte-jwt-signing-key}
  verification-key: ${conexao-de-sorte-jwt-verification-key}
  expiration: PT1H
  refresh-expiration: P7D
  issuer: ${conexao-de-sorte-jwt-issuer}

# ===== CONFIGURAÇÃO DE CRIPTOGRAFIA =====
encryption:
  master-key: ${conexao-de-sorte-encryption-master-key}
  master-password: ${conexao-de-sorte-encryption-master-password}
  backup-key: ${conexao-de-sorte-encryption-backup-key}
  algorithm: AES-256-GCM
  key-derivation: PBKDF2WithHmacSHA256
  iterations: 100000

# ===== CONFIGURAÇÃO AXON FRAMEWORK (EVENT SOURCING) =====
axon:
  axonserver:
    servers: ${conexao-de-sorte-kafka-bootstrap-servers:localhost:9092}
    enabled: true
  serializer:
    general: jackson
    events: jackson
    messages: jackson
  eventsourcing:
    url: ${conexao-de-sorte-database-jdbc-url:jdbc:mysql://localhost:3306/db_auditoria_compliance}
    username: ${conexao-de-sorte-database-username:root}
    password: ${conexao-de-sorte-database-password}

# ===== CONFIGURAÇÃO DE AUDITORIA =====
auditoria:
  enabled: true
  retention-days: 2555  # 7 anos
  batch-size: 1000
  async-processing: true
  encryption:
    enabled: true
    key-rotation-days: 90
  compliance:
    lgpd:
      enabled: true
      anonymization-after-days: 1825  # 5 anos
    sox:
      enabled: true
      detailed-logging: true
    pci-dss:
      enabled: true
      mask-sensitive-data: true

# ===== CONFIGURAÇÃO DE LOGGING =====
logging:
  level:
    root: INFO
    br.com.conexaodesorte: DEBUG
    org.springframework.security: DEBUG
    org.springframework.cloud.azure: INFO
    org.springframework.r2dbc: INFO
    org.flywaydb: INFO
    org.axonframework: INFO
    org.springframework.kafka: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
  file:
    name: /var/log/conexao-de-sorte/auditoria-compliance.log
    max-size: 100MB
    max-history: 30
    total-size-cap: 3GB

# ===== CONFIGURAÇÃO DE RESILIÊNCIA (RESILIENCE4J) =====
resilience4j:
  circuitbreaker:
    instances:
      default:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: PT30S
        permitted-number-of-calls-in-half-open-state: 3
  retry:
    instances:
      default:
        max-attempts: 3
        wait-duration: PT1S
        exponential-backoff-multiplier: 2
  ratelimiter:
    instances:
      default:
        limit-for-period: 100
        limit-refresh-period: PT1M
        timeout-duration: PT5S
  bulkhead:
    instances:
      default:
        max-concurrent-calls: 50
        max-wait-duration: PT10S

# ===== CONFIGURAÇÃO DE CACHE =====
spring.cache:
  type: redis
  redis:
    time-to-live: PT1H
    cache-null-values: false
    key-prefix: "auditoria:cache:"
    use-key-prefix: true

# ===== CONFIGURAÇÃO DE OBSERVABILIDADE =====
tracing:
  enabled: true
  sampling:
    probability: 0.1
  zipkin:
    base-url: http://localhost:9411

micrometer:
  tracing:
    enabled: true
  observation:
    enabled: true