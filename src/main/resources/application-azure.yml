# =============================================================================
# CONFIGURAÇÃO AZURE KEY VAULT - AUDITORIA COMPLIANCE MICROSERVICE
# =============================================================================
# Microserviço responsável pela auditoria, compliance e logs de segurança
# Compatível com Spring Boot 3.5.5 e Spring Cloud Azure
# =============================================================================

spring:
  config:
    activate:
      on-profile: azure
    import:
      - "optional:configtree:/run/secrets/"

  # ===== R2DBC DATABASE CONFIGURATION =====
  r2dbc:
    # Preferencialmente usa -database-r2dbc-url; mantém compat com -database-url
    url: ${conexao-de-sorte-database-r2dbc-url:${conexao-de-sorte-database-url:r2dbc:mysql://mysql-proxy:6033/conexao_de_sorte?useSSL=true&allowPublicKeyRetrieval=false&serverTimezone=America/Sao_Paulo}}
    username: ${conexao-de-sorte-database-username:audit_user}
    password: ${conexao-de-sorte-database-password:}
    pool:
      enabled: true
      initial-size: 10
      max-size: 50
      max-idle-time: 30m
      max-acquire-time: 60s
      max-create-connection-time: 10s
      validation-query: "SELECT 1"

  # ===== FLYWAY FOR MIGRATIONS =====
  flyway:
    enabled: true
    url: ${conexao-de-sorte-database-jdbc-url:jdbc:mysql://mysql-proxy:6033/conexao_de_sorte?useSSL=true&allowPublicKeyRetrieval=false&serverTimezone=America/Sao_Paulo}
    user: ${conexao-de-sorte-database-username:audit_user}
    password: ${conexao-de-sorte-database-password:}
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: false

  # ===== REDIS CONFIGURATION =====
  data:
    redis:
      host: ${conexao-de-sorte-redis-host:conexao-redis}
      port: ${conexao-de-sorte-redis-port:6379}
      password: ${conexao-de-sorte-redis-password:}
      database: 2
      timeout: 5s
      lettuce:
        pool:
          enabled: true
          max-active: 16
          max-idle: 8
          min-idle: 2
          max-wait: 5s

  # ===== JWT OAUTH2 CONFIGURATION =====
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${conexao-de-sorte-jwt-issuer:https://auth.conexaodesorte.com}
          jwk-set-uri: ${conexao-de-sorte-jwt-jwks-uri:https://auth.conexaodesorte.com/.well-known/jwks.json}

# ===== SERVER CONFIGURATION =====
server:
  port: ${conexao-de-sorte-server-port:8085}
  shutdown: graceful

  # SSL/TLS Configuration
  ssl:
    # Em Azure, TLS normalmente é encerrado no gateway/reverso. Mantemos desabilitado
    # por padrão e só ativamos quando os segredos do keystore forem realmente
    # fornecidos via Key Vault/Secrets ou variáveis de ambiente.
    enabled: false  # TLS termina no Traefik (ACME) - forçar false
    key-store: ${conexao-de-sorte-ssl-keystore-path:}
    key-store-password: ${conexao-de-sorte-ssl-keystore-password:}
    key-store-type: PKCS12

  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

  # Compression
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json

# ===== MANAGEMENT ENDPOINTS =====
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
    info:
      access: read-only
    env:
      access: none
    configprops:
      access: none
    beans:
      access: none
    conditions:
      access: none
    mappings:
      access: none
    threaddump:
      access: none
    heapdump:
      access: none
    startup:
      access: none
  health:
    redis:
      enabled: true
    db:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

# ===== LOGGING CONFIGURATION =====
logging:
  level:
    root: INFO
    "[br.tec.facilitaservicos.auditoria]": DEBUG
    "[org.springframework.security]": INFO
    "[org.springframework.r2dbc]": DEBUG
    "[org.springframework.cloud.config]": INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    # Direciona para diretório gravável dentro do container; pode ser sobrescrito
    # por variável de ambiente LOG_FILE, seguindo o padrão dos demais serviços.
    name: ${LOG_FILE:/app/logs/auditoria-compliance.log}
